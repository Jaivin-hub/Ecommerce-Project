{"version":3,"sources":["app/form-elements/Subcategory.js"],"names":["Subcategory","useState","values","setValues","categories","setCategories","useEffect","getCategory","instance","get","then","res","data","catch","err","console","log","textHandler","e","newData","target","id","value","className","aria-label","href","onClick","event","preventDefault","aria-current","onSubmit","post","Group","htmlFor","onChange","map","item","k","Categoryname","Control","type","placeholder"],"mappings":"2eAQO,SAASA,IAAe,IAAD,EAEEC,qBAFF,mBAEnBC,EAFmB,KAEXC,EAFW,OAGUF,mBAAS,IAHnB,mBAGnBG,EAHmB,KAGPC,EAHO,KAK1BC,qBAAU,WACNC,MACD,IAEH,IAAMA,EAAc,WAChBC,IAASC,IAAI,gBAAgBC,MAAK,SAACC,GAC/B,IAAMC,EAAOD,EAAIC,KACjBP,EAAcO,MACfC,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAIdG,EAAc,SAACC,GACjB,IAAMC,E,yVAAO,IAAQjB,GACrBiB,EAAQD,EAAEE,OAAOC,IAAMH,EAAEE,OAAOE,MAChCnB,EAAUgB,IAYd,OACI,6BACI,yBAAKI,UAAU,eACX,wBAAIA,UAAU,cAAd,wBACA,yBAAKC,aAAW,cACZ,wBAAID,UAAU,cACV,wBAAIA,UAAU,mBAAkB,uBAAGE,KAAK,KAAKC,QAAS,SAAAC,GAAK,OAAIA,EAAMC,mBAArC,iBAChC,wBAAIL,UAAU,yBAAyBM,eAAa,QAApD,mBAIZ,yBAAKN,UAAU,aACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,uBAEA,0BAAMO,SA1BT,SAACZ,GAClBA,EAAEU,iBACFpB,IAASuB,KAAK,kBAAmB7B,GAAQQ,MAAK,WAC1CK,QAAQC,IAAI,cACbH,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAqBkCS,UAAU,gBACpC,kBAAC,IAAKS,MAAN,KACI,2BAAOC,QAAQ,uBAAf,cACA,4BAAQC,SAAUjB,EAAaM,UAAU,eAAeF,GAAG,YACtDjB,EAAW+B,KAAI,SAACC,EAAMC,GACnB,OACI,gCAASD,EAAKE,mBAK9B,kBAAC,IAAKN,MAAN,CAAYT,UAAU,OAClB,2BAAOU,QAAQ,wBAAwBV,UAAU,2BAAjD,gBACA,yBAAKA,UAAU,YACX,kBAAC,IAAKgB,QAAN,CAAcL,SAAUjB,EAAauB,KAAK,OAAOjB,UAAU,eAAeF,GAAG,cAAcoB,YAAY,eAG/G,4BAAQD,KAAK,SAASjB,UAAU,wBAAhC,UACA,4BAAQA,UAAU,gBAAlB,gBAWjBvB","file":"static/js/13.a79d080e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport './style.css'\nimport instance from '../axios-orders';\n\n\nexport function Subcategory() {\n\n    const [values, setValues] = useState()\n    const [categories, setCategories] = useState([])\n\n    useEffect(() => {\n        getCategory()\n    }, [])\n\n    const getCategory = () => {\n        instance.get('/getcatagory').then((res) => {\n            const data = res.data\n            setCategories(data)\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n    const textHandler = (e) => {\n        const newData = { ...values }\n        newData[e.target.id] = e.target.value\n        setValues(newData)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        instance.post('/addsubcatagory', values).then(() => {\n            console.log('success')\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n    return (\n        <div>\n            <div className=\"page-header\">\n                <h3 className=\"page-title\"> Add New Subcatagory</h3>\n                <nav aria-label=\"breadcrumb\">\n                    <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>New Products</a></li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Add products</li>\n                    </ol>\n                </nav>\n            </div>\n            <div className=\"row mt-5 \">\n                <div className=\"col-md-6 grid-margin stretch-card\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h4 className=\"card-title\">Category Management</h4>\n\n                            <form onSubmit={handleSubmit} className=\"forms-sample\">\n                                <Form.Group>\n                                    <label htmlFor=\"exampleSelectGender\">Categories</label>\n                                    <select onChange={textHandler} className=\"form-control\" id=\"Category\">\n                                        {categories.map((item, k) => {\n                                            return (\n                                                <option>{item.Categoryname}</option>\n                                            )\n                                        })}\n                                    </select>\n                                </Form.Group>\n                                <Form.Group className=\"row\">\n                                    <label htmlFor=\"exampleInputUsername2\" className=\"col-sm-3 col-form-label\">Sub Category</label>\n                                    <div className=\"col-sm-9\">\n                                        <Form.Control onChange={textHandler} type=\"text\" className=\"form-control\" id=\"subcategory\" placeholder=\"Username\" />\n                                    </div>\n                                </Form.Group>\n                                <button type=\"submit\" className=\"btn btn-primary mr-2\">Submit</button>\n                                <button className=\"btn btn-dark\">Cancel</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Subcategory"],"sourceRoot":""}