{"version":3,"sources":["app/FileUpload.js","Editproducts.js"],"names":["fileUploadAndResize","res","console","log","Promise","resolve","reject","allUploadedFiles","instance","post","image","then","response","data","url","catch","err","Editproducts","productId","useParams","id","useState","categoryDetails","setCategoryDetails","productDetails","setProductDetails","name","setName","quantity","setQuantity","size","setSize","productsubcategory","setProductSubCategory","mainCategory","setMainCategory","price","setPrice","description","setDescription","categorydata","setCategoryData","value","setValues","stock","setStock","useEffect","getCategories","searchProduct","proImgs","setProImgs","get","images","subcategory","maincategory","srcImg","setSrcImg","result","setResult","setImage","aspect","crop","setCrop","showImageHandler","setShowImageHandler","text1","setText1","text2","setText2","text3","setText3","text4","setText4","imageHandleChange","e","type","a","URL","createObjectURL","getCroppedImg","canvas","document","createElement","scaleX","naturalWidth","width","scaleY","naturalHeight","height","getContext","drawImage","x","y","base64Image","toDataURL","urlArray","image1","image2","image3","image4","setSubCategory","submitHandler","preventDefault","productdetails","className","aria-label","href","onClick","event","aria-current","onSubmit","Group","htmlFor","Control","onChange","target","placeholder","newValues","Subcategory","map","item","key","Categoryname","aria-labelledby","centered","show","Body","cropBoxResizable","cropBoxData","style","maxWidth","src","onImageLoaded","alt","k","i","marginLeft","data-text","files","rows"],"mappings":"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","file":"static/js/8.cc742ad8.chunk.js","sourcesContent":["import React from \"react\";\nimport Resizer from \"react-image-file-resizer\";\nimport instance from \"./axios-orders\";\nexport const fileUploadAndResize = (res) => {\n  console.log('fileill')\n  return new Promise((resolve, reject) => {\n    let allUploadedFiles = ''\n\n    if (res) {\n      instance\n        .post(\n          `/uploads`,\n          { image: res },\n        )\n        .then((response) => {   \n          console.log('res aanu')\n          allUploadedFiles = response.data.url;\n          resolve(allUploadedFiles);\n        })\n        .catch((err) => {\n          console.log(\"CLOUDINARY UPLOAD ERR\", err);\n          reject('dfsdfd')\n        });\n    } // send back to server to upload cloudinary\n  })\n};\n","import React from 'react'\nimport { useState, useEffect } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\n\nimport DatePicker from \"react-datepicker\";\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport { useParams } from 'react-router-dom'\nimport { fileUploadAndResize } from '../src/app/FileUpload';\nimport './editproduct.css'\nimport { Modal, Button, Form } from 'react-bootstrap'\n\nimport instance from './app/axios-orders';\n\n\nfunction Editproducts() {\n\n    const id = useParams()\n    const productId = id.id\n\n    const [categoryDetails, setCategoryDetails] = useState([])\n    const [productDetails, setProductDetails] = useState([])\n    const [name, setName] = useState(null)\n    const [quantity, setQuantity] = useState()\n    const [size, setSize] = useState()\n    const [productsubcategory, setProductSubCategory] = useState()\n    const [mainCategory, setMainCategory] = useState()\n    const [price, setPrice] = useState()\n    const [description, setDescription] = useState()\n    const [categorydata, setCategoryData] = useState([])\n    const [value, setValues] = useState()\n    const [stock, setStock] = useState()\n\n    useEffect(() => {\n        getCategories()\n        searchProduct()\n    }, [])\n\n\n    const [proImgs, setProImgs] = useState()\n    const searchProduct = () => {\n        instance.get(`/findProduct/${productId}`).then((res) => {\n            setProductDetails(res.data)\n            console.log('WORK SITE')\n            setProImgs(res.data[0].images[0])\n            setName(res.data[0].name)\n            setQuantity(res.data[0].quantity)\n            setSize(res.data[0].size)\n            setProductSubCategory(res.data[0].subcategory)\n            setMainCategory(res.data[0].maincategory)\n            setPrice(res.data[0].price)\n            setDescription(res.data[0].description)\n        })\n    }\n    console.log(\"ithaanu...ellam....\", proImgs)\n\n    const onHide = () => {\n        setShowImageHandler(false)\n\n    }\n\n    const getCategories = () => {\n        instance.get('/findCategories').then((response) => {\n            setCategoryDetails(response.data)\n        })\n    }\n\n\n    // images handlers...\n\n    // const [image1, setImage1] = useState('')\n    // const [image2, setImage2] = useState('')\n    // const [image3, setImage3] = useState('')\n    // const [image4, setImage4] = useState('')\n\n    const [tempImage, setTempImage] = useState()\n    const [srcImg, setSrcImg] = useState(null);\n    const [result, setResult] = useState(null);\n    const [image, setImage] = useState(null);\n    const [crop, setCrop] = useState({ aspect: 1 / 1 });\n    const [showImageHandler, setShowImageHandler] = useState(false)\n    const [mainImage, setMainImage] = useState([]);\n    const [text1, setText1] = useState(false)\n    const [text2, setText2] = useState(false)\n    const [text3, setText3] = useState(false)\n    const [text4, setText4] = useState(false)\n\n\n\n    const imageHandleChange = async (e, type) => {\n        console.log('imageUpload function')\n        console.log(e, type)\n        if (type == \"first\") {\n            setSrcImg(URL.createObjectURL(e));\n            setShowImageHandler(true)\n            setText1(true);\n        } else if (type == \"second\") {\n            setSrcImg(URL.createObjectURL(e));\n            setShowImageHandler(true)\n            setText2(true);\n        } else if (type == \"third\") {\n            setSrcImg(URL.createObjectURL(e));\n            setShowImageHandler(true)\n            setText3(true);\n        } else if (type == \"fourth\") {\n            setSrcImg(URL.createObjectURL(e));\n            setShowImageHandler(true)\n            setText4(true);\n        } else {\n\n        }\n\n\n        // const urlArray = await fileUploadAndResize(e)\n        // console.log('url array....')\n        // console.log(urlArray)\n        // proImgs.image1= urlArray\n\n        // setImage1(urlArray)\n    }\n\n    const getCroppedImg = async () => {\n        console.log('crop function')\n        try {\n            const canvas = document.createElement(\"canvas\");\n            const scaleX = image.naturalWidth / image.width;\n            const scaleY = image.naturalHeight / image.height;\n            canvas.width = crop.width;\n            canvas.height = crop.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(\n                image,\n                crop.x * scaleX,\n                crop.y * scaleY,\n                crop.width * scaleX,\n                crop.height * scaleY,\n                0,\n                0,\n                crop.width,\n                crop.height\n            );\n            const base64Image = canvas.toDataURL(\"image/jpeg\", 1);\n            setResult(base64Image);\n            setShowImageHandler(false)\n            const urlArray = await fileUploadAndResize(base64Image)\n            console.log(urlArray)\n            if (text1 == true) {\n                proImgs.image1 = urlArray\n                console.log('first---')\n            } else if (text2 == true) {\n                proImgs.image2 = urlArray\n                console.log('second---')\n            } else if (text3 == true) {\n                proImgs.image3 = urlArray\n                console.log('third---')\n            } else if (text4 == true) {\n                proImgs.image4 = urlArray\n                console.log('fourth---')\n            }\n            // setMainImage(urlArray)\n            console.log('data came here')\n        } catch (e) {\n            console.log(\"crop the image\");\n        }\n    };\n\n    const imageHandleSecond = async (e) => {\n        const urlArray = await fileUploadAndResize(e)\n        // setImage2(urlArray)\n    }\n\n    const imageHandlethird = async (e) => {\n        const urlArray = await fileUploadAndResize(e)\n        // setImage3(urlArray)\n    }\n\n    const imageHandlefourth = async (e) => {\n        const urlArray = await fileUploadAndResize(e)\n        // setImage4(urlArray)\n    }\n\n    // images handlers ends...\n\n    const categoryHandler = (e) => {\n        const data = e.target.value\n        const newValues = { ...value }\n        newValues[e.target.id] = e.target.value\n        setValues(newValues)\n        instance.get(`/getsubcategorydetails/${data}`).then((res) => {\n            setCategoryData(res.data.Subcategory)\n        })\n    }\n\n\n    const [subcategory, setSubCategory] = useState('')\n\n    const subCategoryHandler = (e) => {\n        setSubCategory(e.target.value)\n    }\n\n\n    const textChange1 = (e) => {\n        setName(e.target.value)\n    }\n    const textChange2 = (e) => {\n        setQuantity(e.target.value)\n    }\n    const textChange3 = (e) => {\n        setSize(e.target.value)\n    }\n    const textChange4 = (e) => {\n        setStock(e.target.value)\n    }\n    const textChange5 = (e) => {\n        setPrice(e.target.value)\n    }\n    const textChange6 = (e) => {\n        setDescription(e.target.value)\n    }\n\n    const submitHandler = async (e) => {\n        e.preventDefault()\n        // const main = value.maincategory\n        const data = { name, stock, price, quantity, description, size, subcategory, productId }\n        const { image1, image2, image3, image4 } = proImgs\n        const productdetails = { image1, image2, image3, image4, data }\n        console.log('Edit product data', productdetails)\n        // instance.post('/editProductdetails', productdetails).then(() => {\n        // }).catch((err) => {\n        //     console.log(err)\n        // })\n    }\n\n    console.log('----',proImgs)\n\n\n    return (\n        <div>\n            <div className=\"page-header\">\n                <h3 className=\"page-title\"> Edit Products </h3>\n                <nav aria-label=\"breadcrumb\">\n                    <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>New Products</a></li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Add products</li>\n                    </ol>\n                </nav>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12 grid-margin stretch-card\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <div className=\"col-md-2\">\n                                    <h4 className=\"card-title\">Product details</h4>\n                                </div>\n                                <div className=\"col-md-10\">\n                                    <div className=\"row results ps-4\">\n                                    </div>\n                                </div>\n                            </div>\n                            {/* {productDetails.map((item, key) => {\n                                return ( */}\n                            <form onSubmit={submitHandler} className=\"forms-sample pt-4\">\n                                <Form.Group>\n                                    <label htmlFor=\"exampleInputName1\">Product Name</label>\n\n                                    <Form.Control type=\"text\" onChange={textChange1} value={name} className=\"form-control\" id=\"name\" placeholder=\"Name\" />\n                                </Form.Group>\n                                <Form.Group>\n                                    <label htmlFor=\"exampleInputEmail3\">Quantity</label>\n                                    <Form.Control type=\"text\" onChange={textChange2} value={quantity} className=\"form-control\" id=\"quantity\" placeholder=\"quantity\" />\n                                </Form.Group>\n                                <Form.Group>\n                                    <label htmlFor=\"exampleInputEmail3\">Size</label>\n                                    <Form.Control type=\"text\" onChange={textChange3} value={size} className=\"form-control\" id=\"size\" placeholder=\"size\" />\n                                </Form.Group>\n                                <Form.Group>\n                                    <label htmlFor=\"exampleInputPassword4\">Category</label>\n                                    <select className=\"form-control\" onChange={categoryHandler} id=\"maincategory\">\n                                        <option>{mainCategory}</option>\n                                        {categoryDetails.map((item, key) => {\n                                            return (\n                                                <option>{item.Categoryname}</option>\n                                            )\n                                        })}\n                                    </select>\n                                </Form.Group>\n                                <Form.Group>\n                                    <label htmlFor=\"exampleInputPassword4\">SubCategory</label>\n                                    <select className=\"form-control\" onChange={subCategoryHandler} id=\"subcategory\">\n                                        <option>{productsubcategory}</option>\n                                        {categorydata.map((item, key) => {\n                                            return (\n                                                <option>{item}</option>\n                                            )\n                                        })}\n                                    </select>\n                                </Form.Group>\n                                <Form.Group>\n                                    <label htmlFor=\"exampleSelectGender\">Stockdetails</label>\n                                    <select className=\"form-control\" onChange={textChange4} id=\"stockdetails\">\n                                        <option>Select</option>\n                                        <option>In stock</option>\n                                        <option>Out of stock</option>\n                                    </select>\n                                </Form.Group>\n\n\n                                <Modal size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered show={showImageHandler}>\n                                    <Modal.Body>\n                                        <div>\n                                            {srcImg && (\n                                                <div>\n                                                    <ReactCrop cropBoxResizable={false} cropBoxData={{ width: 100, height: 50 }} style={{ maxWidth: \"50%\" }} src={srcImg} onImageLoaded={setImage} crop={crop} onChange={setCrop} />\n                                                    <Button onClick={getCroppedImg}>crop</Button>\n                                                </div>\n                                            )}\n                                            {result && (\n                                                <div>\n                                                    <img src={result} alt=\"cropped image\" />\n                                                </div>\n                                            )}\n                                        </div>\n                                        <Button onClick={onHide}>Close</Button>\n                                    </Modal.Body>\n                                </Modal>\n                                <div className=\"row\">\n\n\n\n                                    {/* {proImgs.map((item, k) => {\n                                        return ( */}\n                                            {/* <div className=\"col-md-3\">\n                                            <img src={proImgs.image1} alt=\"\" />\n                                            </div> */}\n                                        {/* )\n                                    })} */}\n                                </div>\n\n                                <div className=\"row\">\n\n                                    {productDetails.map((item, k) => {\n                                        return (\n                                            <div className=\"row\">\n\n                                                {item.images.map((image, i) => {\n                                                    return (\n                                                        <div style={{ marginLeft: \"10%\" }} className=\"row\">\n                                                            <div className=\"form col-md-3 text-center\">\n                                                                <form >\n                                                                    <label>Edit file</label><br />\n                                                                    {/* <img style={{ width: \"50%\", height: \"13em\" }} src={image.image1} alt=\"\" /> */}\n                                                                    <div className=\"file-upload-wrapper mt-3\" data-text=\"Select your file!\">\n                                                                        <input type=\"file\" onChange={(e) => { imageHandleChange(e.target.files[0], 'first') }} name=\"Img1\" className=\"file-upload-field\" id=\"file-upload-field\" />\n                                                                    </div>\n                                                                </form>\n                                                            </div>\n                                                            <div className=\"form col-md-3\">\n                                                                <form >\n                                                                    <label className=\"label-text\">Edit file</label><br />\n                                                                    {/* <img style={{ width: \"50%\", height: \"13em\" }} src={image.image2} alt=\"\" /> */}\n                                                                    <div className=\"file-upload-wrapper mt-3\" data-text=\"Select your file!\">\n                                                                        <input type=\"file\" onChange={(e) => { imageHandleChange(e.target.files[0], 'second') }} name=\"Img2\" className=\"file-upload-field\" id=\"file-upload-field\" />\n                                                                    </div>\n                                                                </form>\n                                                            </div>\n                                                            <div className=\"form col-md-3\">\n                                                                <form >\n                                                                    <label className=\"label-text\">Edit file</label><br />\n                                                                    {/* <img style={{ width: \"50%\", height: \"13em\" }} src={image.image3} alt=\"\" /> */}\n                                                                    <div className=\"file-upload-wrapper mt-3\" data-text=\"Select your file!\">\n                                                                        <input type=\"file\" onChange={(e) => { imageHandleChange(e.target.files[0], 'third') }} name=\"Img3\" className=\"file-upload-field\" id=\"file-upload-field\" />\n                                                                    </div>\n                                                                </form>\n                                                            </div>\n                                                            <div className=\"form col-md-3\">\n                                                                <form >\n                                                                    <label className=\"label-text\">Edit file</label><br />\n                                                                    {/* <img style={{ width: \"50%\", height: \"13em\" }} src={image.image4} alt=\"\" /> */}\n                                                                    <div className=\"file-upload-wrapper mt-3\" data-text=\"Select your file!\">\n                                                                        <input type=\"file\" onChange={(e) => { imageHandleChange(e.target.files[0], 'fourth') }} name=\"Img4\" className=\"file-upload-field\" id=\"file-upload-field\" />\n                                                                    </div>\n                                                                </form>\n                                                            </div>\n                                                        </div>\n                                                    )\n                                                })}\n\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n\n                                <Form.Group>\n                                    <label htmlFor=\"exampleInputCity1\">Price</label>\n                                    <Form.Control type=\"text\" onChange={textChange5} value={price} className=\"form-control\" id=\"price\" placeholder=\"price\" />\n                                </Form.Group>\n                                <Form.Group>\n                                    <label htmlFor=\"exampleTextarea1\">Description</label>\n                                    <textarea className=\"form-control\" onChange={textChange6} value={description} id=\"description\" rows=\"4\"></textarea>\n                                </Form.Group>\n                                <button type=\"submit\" className=\"btn btn-primary mr-2\">Submit</button>\n                                <button className=\"btn btn-dark\">Cancel</button>\n                            </form>\n\n\n\n\n                        </div>\n\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Editproducts\n"],"sourceRoot":""}