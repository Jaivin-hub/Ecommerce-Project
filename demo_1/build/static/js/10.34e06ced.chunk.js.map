{"version":3,"sources":["app/basic-ui/ProductManagement.js"],"names":["Buttons","useState","data","setData","fordelete","setFordelete","history","useHistory","sliderSettings","infinite","speed","slidesToShow","slidesToScroll","useEffect","getData","instance","get","then","res","newData","console","log","className","aria-label","href","onClick","event","preventDefault","aria-current","map","item","key","name","images","itm","k","style","height","src","image1","alt","category","description","price","id","_id","push","type","productId","post","response"],"mappings":"qOAwHeA,UAhHf,WAAoB,IAAD,EAEOC,mBAAS,IAFhB,mBAEVC,EAFU,KAEJC,EAFI,OAGiBF,oBAAS,GAH1B,mBAGVG,EAHU,KAGCC,EAHD,KAIbC,EAAUC,cAERC,EAAiB,CACrBC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,GAGlBC,qBAAU,WACRC,MACC,CAACV,IAIJ,IAAMU,EAAU,WACdC,IAASC,IAAI,gBAAgBC,MAAK,SAACC,GACjC,IAAMC,EAAUD,EAAIhB,KACpBC,EAAQgB,OAkBZ,OAdAC,QAAQC,IAAInB,GAeV,6BACE,yBAAKoB,UAAU,eACb,wBAAIA,UAAU,cAAd,YAGA,yBAAKC,aAAW,cACd,wBAAID,UAAU,cACZ,wBAAIA,UAAU,mBAAkB,uBAAGE,KAAK,KAAKC,QAAS,SAAAC,GAAK,OAAIA,EAAMC,mBAArC,gBAChC,wBAAIL,UAAU,yBAAyBM,eAAa,QAApD,cAIN,yBAAKN,UAAU,OACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,gBACA,uBAAGA,UAAU,oBAAb,gDACA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,mBAEZpB,EAAK2B,KAAI,SAACC,EAAMC,GACf,OACE,yBAAKT,UAAU,8CACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAcQ,EAAKE,MACjC,kBAAC,IAAD,eAAQV,UAAU,oBAAuBd,GACtCsB,EAAKG,OAAOJ,KAAI,SAACK,EAAKC,GACrB,OACE,yBAAKb,UAAU,UACb,yBAAKc,MAAO,CAAEC,OAAQ,QAAUf,UAAU,SAASgB,IAAKJ,EAAIK,OAAQC,IAAI,uBAKhF,yBAAKlB,UAAU,eACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,uDACb,wBAAIA,UAAU,mBAAmBQ,EAAKW,UACtC,uBAAGnB,UAAU,yBAAyBQ,EAAKY,YAA3C,MAEF,uBAAGpB,UAAU,cAAcQ,EAAKa,YAM1C,yBAAKrB,UAAU,mCACb,4BAAQG,QAAS,WAzD3B,IAACmB,IAyD8Cd,EAAKe,IAxDpEvC,EAAQwC,KAAR,wBAA8BF,KAwD8CG,KAAK,SAASzB,UAAU,kCAA1E,QACA,4BAAQG,QAAS,WAlEvB,IAACuB,IAkE4ClB,EAAKe,IAjEtExC,GAAcD,GACdgB,QAAQC,IAAI2B,GACZjC,IAASkC,KAAT,6BAAoCD,IAAa/B,MAAK,SAACiC,GACrD9B,QAAQC,IAAI,kBA8DgE0B,KAAK,SAASzB,UAAU,kCAA5E","file":"static/js/10.34e06ced.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Slider from \"react-slick\";\nimport axios from 'axios'\nimport instance from '../axios-orders'\nimport './style.css'\nimport { useHistory } from \"react-router-dom\"\n\n\nfunction Buttons() {\n\n  const [data, setData] = useState([])\n  const [fordelete, setFordelete] = useState(false)\n  let history = useHistory();\n\n  const sliderSettings = {\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  }\n\n  useEffect(() => {\n    getData()\n  }, [fordelete])\n\n \n\n  const getData = () => {\n    instance.get('/getproducts').then((res) => {\n      const newData = res.data\n      setData(newData)\n    })\n  }\n\n  console.log(data)\n\n  const deleteProduct = (productId) => {\n    setFordelete(!fordelete)\n    console.log(productId)\n    instance.post(`/deleteproduct/?id=${productId}`).then((response) => {\n      console.log('all finish')\n    })\n  }\n\n  const EditProduct=(id)=>{\n    history.push(`/editproducts/${id}`);\n  } \n\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\">\n          Products\n        </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>UI Elements</a></li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">Buttons</li>\n          </ol>\n        </nav>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12 grid-margin stretch-card\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">All Products</h4>\n              <p className=\"card-description\">You can edit this products by clicking them.</p>\n              <div className=\"template-demo\">\n                <div className=\"row text-center\">\n\n                  {data.map((item, key) => {\n                    return (\n                      <div className=\"col-md-6 col-xl-4 grid-margin stretch-card\">\n                        <div className=\"card\">\n                          <div className=\"card-body\">\n                            <h4 className=\"card-title\">{item.name}</h4>\n                            <Slider className=\"portfolio-slider\" {...sliderSettings}>\n                              {item.images.map((itm, k) => {\n                                return (\n                                  <div className=\"parent\">\n                                    <img style={{ height: \"30em\" }} className=\"image1\" src={itm.image1} alt=\"carousel-item\" />\n                                  </div>\n                                )\n                              })}\n                            </Slider>\n                            <div className=\"d-flex py-4\">\n                              <div className=\"preview-list w-100\">\n                                <div className=\"preview-item p-0\">\n                                  <div className=\"preview-item-content d-flex flex-grow\">\n                                    <div className=\"flex-grow\">\n                                      <div className=\"d-flex d-md-block d-xl-flex justify-content-between\">\n                                        <h6 className=\"preview-subject\">{item.category}</h6>\n                                        <p className=\"text-muted text-small\">{item.description}.</p>\n                                      </div>\n                                      <p className=\"text-muted\">{item.price}</p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\" progress-md portfolio-progress\">\n                              <button onClick={() => { EditProduct(item._id) }} type=\"button\" className=\"btn btn-outline-primary btn-fw\">Edit</button>\n                              <button onClick={() => { deleteProduct(item._id) }} type=\"button\" className=\"btn btn-outline-danger btn-fw \">Delete</button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    )\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n}\n\nexport default Buttons;"],"sourceRoot":""}