{"version":3,"sources":["app/dashboard/Dashboard.js"],"names":["ChartJs","useEffect","getData","getDaily","getWeeklySailes","useState","COD","setCOD","paypal","setPaypal","razorpay","setRazorpay","instance","get","then","res","data","dailyReport","setDailyReport","dailyAmount","setDailyAmount","days","labels","Date","getDay","datasets","label","backgroundColor","borderColor","borderWidth","fill","areaData","areaOptions","plugins","filler","propagate","scales","yAxes","gridLines","color","xAxes","doughnutPieData","className","aria-label","options","ticks","beginAtZero","legend","display","elements","point","radius","responsive","animation","animateScale","animateRotate"],"mappings":"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","file":"static/js/19.e1136605.chunk.js","sourcesContent":["import instance from '../axios-orders'\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar, Doughnut, Pie, Scatter } from 'react-chartjs-2';\n\nfunction ChartJs() {\n\n  useEffect(() => {\n    getData()\n    getDaily()\n    getWeeklySailes()\n    \n  }, [])\n\n  const [COD, setCOD] = useState()\n  const [paypal, setPaypal] = useState()\n  const [razorpay, setRazorpay] = useState()\n\n \n\n  const getData = () => {\n    instance.get('/getDataToDashbord').then((res) => {\n      setCOD(res.data.COD)\n      setPaypal(res.data.paypal)\n      setRazorpay(res.data.razorpay)\n    })\n  }\n\n  const [dailyReport, setDailyReport] = useState([])\n\n  const getDaily = () => {\n    instance.get('/getDataofDaily').then((res) => {\n      setDailyReport(res.data)\n    })\n  }\n\n  const [dailyAmount, setDailyAmount] = useState([])\n\n  const getWeeklySailes = () => {\n    instance.get('/getWeeklySailes').then((res) => {\n      setDailyAmount(res.data)\n    })\n  }\n  \n  // first chart...\n  const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  const data = {\n    labels: [days[(new Date().getDay()) % 7], days[(new Date().getDay() + 1) % 7], days[(new Date().getDay() + 2) % 7], days[(new Date().getDay() + 3) % 7], days[(new Date().getDay() + 4) % 7], days[(new Date().getDay() + 5) % 7], days[(new Date().getDay() + 6) % 7], days[(new Date().getDay())]],\n    datasets: [{\n      label: 'Daily orders ',\n      data: dailyReport,\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)',\n        'rgba(115, 200, 34, 0.2)',\n        'rgba(54, 162, 235, 0.2)'\n      ],\n      borderColor: [\n        'rgba(255,99,132,1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)',\n        'rgba(321, 472, 35, 1)',\n        'rgba(153, 102, 255, 1)'\n      ],\n      borderWidth: 1,\n      fill: false\n    }]\n  };\n\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        },\n        gridLines: {\n          color: \"rgba(204, 204, 204,0.1)\"\n        }\n      }],\n      xAxes: [{\n        gridLines: {\n          color: \"rgba(204, 204, 204,0.1)\"\n        }\n      }]\n    },\n    legend: {\n      display: false\n    },\n    elements: {\n      point: {\n        radius: 0\n      }\n    }\n  }\n\n  // End\n  // Second Chart \n\n  const areaData = {\n    labels: [days[(new Date().getDay()) % 7], days[(new Date().getDay() + 1) % 7], days[(new Date().getDay() + 2) % 7], days[(new Date().getDay() + 3) % 7], days[(new Date().getDay() + 4) % 7], days[(new Date().getDay() + 5) % 7], days[(new Date().getDay() + 6) % 7], days[(new Date().getDay())]],\n    datasets: [{\n      label: '# Revenue',\n      data: dailyAmount,\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)'\n      ],\n      borderColor: [\n        'rgba(255,99,132,1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)'\n      ],\n      borderWidth: 1,\n      fill: true, // 3: no fill\n    }]\n  };\n\n  const areaOptions = {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    },\n    scales: {\n      yAxes: [{\n        gridLines: {\n          color: \"rgba(204, 204, 204,0.1)\"\n        }\n      }],\n      xAxes: [{\n        gridLines: {\n          color: \"rgba(204, 204, 204,0.1)\"\n        }\n      }]\n    }\n  }\n\n  \n\n\n\n\n\n\n\n\n  const doughnutPieData = {\n    datasets: [{\n      data: [paypal, COD, razorpay],\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.5)',\n        'rgba(54, 162, 235, 0.5)',\n        'rgba(255, 206, 86, 0.5)',\n        'rgba(75, 192, 192, 0.5)',\n        'rgba(153, 102, 255, 0.5)',\n        'rgba(255, 159, 64, 0.5)'\n      ],\n      borderColor: [\n        'rgba(255,99,132,1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)'\n      ],\n    }],\n\n    // These labels appear in the legend and in the tooltips when hovering different arcs\n    labels: [\n      'Paypal',\n      'COD',\n      'Razorpay',\n    ]\n  };\n\n  const doughnutPieOptions = {\n    responsive: true,\n    animation: {\n      animateScale: true,\n      animateRotate: true\n    }\n  };\n\n  const scatterChartData = {\n    datasets: [{\n      label: 'First Dataset',\n      data: [{\n        x: -10,\n        y: 0\n      },\n      {\n        x: 0,\n        y: 3\n      },\n      {\n        x: -25,\n        y: 5\n      },\n      {\n        x: 40,\n        y: 5\n      }\n      ],\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)'\n      ],\n      borderColor: [\n        'rgba(255,99,132,1)'\n      ],\n      borderWidth: 1\n    },\n    {\n      label: 'Second Dataset',\n      data: [{\n        x: 10,\n        y: 5\n      },\n      {\n        x: 20,\n        y: -30\n      },\n      {\n        x: -25,\n        y: 15\n      },\n      {\n        x: -10,\n        y: 5\n      }\n      ],\n      backgroundColor: [\n        'rgba(54, 162, 235, 0.2)',\n      ],\n      borderColor: [\n        'rgba(54, 162, 235, 1)',\n      ],\n      borderWidth: 1\n    }\n    ]\n  }\n\n  const scatterChartOptions = {\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom',\n        gridLines: {\n          color: \"rgba(204, 204, 204,0.1)\"\n        }\n      }],\n      yAxes: [{\n        gridLines: {\n          color: \"rgba(204, 204, 204,0.1)\"\n        }\n      }]\n    }\n  }\n\n\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\">\n          YourOwn Reports\n        </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n          </ol>\n        </nav>\n      </div>\n      <div className=\"row\">\n\n\n        <div className=\"col-md-6 grid-margin stretch-card\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Daily Orders</h4>\n              <Bar data={data} options={options} />\n            </div>\n          </div>\n        </div>\n\n\n        <div className=\"col-md-6 grid-margin stretch-card\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Sales Revenue</h4>\n              <Line data={areaData} options={areaOptions} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      <div className=\"row\">\n        <div className=\"col-md-6 grid-margin stretch-card\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Payment Report</h4>\n              <Doughnut data={doughnutPieData} options={doughnutPieOptions} />\n            </div>\n          </div>\n        </div>\n\n\n        <div className=\"col-md-6 grid-margin stretch-card\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Scatter Chart</h4>\n              <Scatter data={areaData} options={areaOptions} />\n            </div>\n          </div>\n        </div>\n\n\n      </div>\n    </div>\n  )\n}\n\n\nexport default ChartJs\n"],"sourceRoot":""}