{"version":3,"sources":["app/form-elements/Offers.js"],"names":["Offers","useState","values","setValues","setCoupons","ok","setOk","categoryDetails","setCategoryDetails","offers","setOffers","useEffect","getData","getCategories","textChange","e","newValues","target","id","value","instance","get","then","res","data","response","className","onSubmit","preventDefault","post","Group","htmlFor","onChange","map","item","key","Categoryname","Control","type","placeholder","k","maincategory","offerdiscount","offer","offerexpiredate","status","onClick","category","deleteOffer","_id"],"mappings":"kZA8IeA,UAzIf,WAAmB,IAAD,EAEcC,qBAFd,mBAEPC,EAFO,KAECC,EAFD,OAGgBF,mBAAS,IAHzB,mBAGEG,GAHF,aAIMH,oBAAS,GAJf,mBAIPI,EAJO,KAIHC,EAJG,OAKgCL,mBAAS,IALzC,mBAKPM,EALO,KAKUC,EALV,OAMcP,mBAAS,IANvB,mBAMPQ,EANO,KAMCC,EAND,KAUdC,qBAAU,WACNC,IACAC,MACD,CAACR,IAEJ,IAAMS,EAAa,SAACC,GAChB,IAAMC,E,yVAAS,IAAQd,GACvBc,EAAUD,EAAEE,OAAOC,IAAMH,EAAEE,OAAOE,MAClChB,EAAUa,IAYRJ,EAAU,WACZQ,IAASC,IAAI,sBAAsBC,MAAK,SAACC,GACrCb,EAAUa,EAAIC,UAahBX,EAAgB,WAClBO,IAASC,IAAI,mBAAmBC,MAAK,SAACG,GAClCjB,EAAmBiB,EAASD,UAKpC,OACI,yBAAKE,UAAU,iBACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,kBACA,0BAAMC,SArCJ,SAACZ,GACnBA,EAAEa,iBACFtB,GAAOD,GACPe,IAASS,KAAK,YAAa3B,GAAQoB,MAAK,SAACC,QAkCMG,UAAU,gBACrC,kBAAC,IAAKI,MAAN,KACI,2BAAOC,QAAQ,yBAAf,YACA,4BAAQC,SAAUlB,EAAYY,UAAU,eAAeR,GAAG,gBACtD,0CACCX,EAAgB0B,KAAI,SAACC,EAAMC,GACxB,OACI,gCAASD,EAAKE,mBAK9B,kBAAC,IAAKN,MAAN,CAAYJ,UAAU,OAClB,2BAAOK,QAAQ,qBAAqBL,UAAU,2BAA9C,kBACA,yBAAKA,UAAU,YACX,kBAAC,IAAKW,QAAN,CAAcL,SAAUlB,EAAYwB,KAAK,SAASZ,UAAU,eAAeR,GAAG,WAAWqB,YAAY,gBAI7G,kBAAC,IAAKT,MAAN,CAAYJ,UAAU,OAClB,2BAAOK,QAAQ,wBAAwBL,UAAU,2BAAjD,uBACA,yBAAKA,UAAU,YACX,kBAAC,IAAKW,QAAN,CAAcL,SAAUlB,EAAYwB,KAAK,SAASZ,UAAU,eAAeR,GAAG,oBAAoBqB,YAAY,gBAGtH,kBAAC,IAAKT,MAAN,CAAYJ,UAAU,OAClB,2BAAOK,QAAQ,+BAA+BL,UAAU,2BAAxD,sBACA,yBAAKA,UAAU,YACX,kBAAC,IAAKW,QAAN,CAAcL,SAAUlB,EAAYwB,KAAK,OAAOZ,UAAU,eAAeR,GAAG,aAAaqB,YAAY,gBAG7G,yBAAKb,UAAU,QACX,4BAAQY,KAAK,SAASZ,UAAU,wBAAhC,qBAMpB,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,UACA,yBAAKA,UAAU,oBACX,2BAAOA,UAAU,qBACb,+BACI,4BACI,wCACA,6CACA,4CACA,2CACA,sCACA,wCAGR,+BAEKjB,EAAOwB,KAAI,SAACC,EAAMM,GACf,OACI,4BACI,4BAAKN,EAAKO,cACV,4BAAKP,EAAKQ,eACV,4BAAKR,EAAKS,OACV,4BAAKT,EAAKU,iBACV,4BAAI,2BAAOlB,UAAU,sBAAsBQ,EAAKW,SAChD,4BAAI,4BAAQC,QAAS,YAtF7C,SAAC5B,EAAI6B,GACrB,IAAMvB,EAAO,CAAEN,KAAI6B,YACnBzC,GAAOD,GACPe,IAASS,KAAT,YAA2BL,GAAMF,MAAK,SAACC,GACnCnB,EAAWmB,EAAIC,SAkFkDwB,CAAYd,EAAKe,IAAKf,EAAKO,eAAiBH,KAAK,SAASZ,UAAU,iCAA7F","file":"static/js/23.e85302ee.chunk.js","sourcesContent":["import { Form } from 'react-bootstrap';\nimport React, { useState, useEffect } from 'react'\nimport instance from '../axios-orders'\n\n\nfunction Offers() {\n\n    const [values, setValues] = useState()\n    const [coupons, setCoupons] = useState([])\n    const [ok, setOk] = useState(true)\n    const [categoryDetails, setCategoryDetails] = useState([])\n    const [offers, setOffers] = useState([])\n\n\n\n    useEffect(() => {\n        getData()\n        getCategories()\n    }, [ok])\n\n    const textChange = (e) => {\n        const newValues = { ...values }\n        newValues[e.target.id] = e.target.value\n        setValues(newValues)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        setOk(!ok)\n        instance.post('/addoffer', values).then((res) => {\n\n        })\n    }\n\n\n    const getData = () => {\n        instance.get('/getcategoryoffers').then((res) => {\n            setOffers(res.data)\n        })\n    }\n\n    const deleteOffer = (id, category) => {\n        const data = { id, category }\n        setOk(!ok)\n        instance.post(`/dltoffer`, data).then((res) => {\n            setCoupons(res.data)\n        })\n    }\n\n\n    const getCategories = () => {\n        instance.get('/findCategories').then((response) => {\n            setCategoryDetails(response.data)\n        })\n    }\n\n\n    return (\n        <div className=\"row pt-5 mt-5\">\n            <div className=\"col-md-6 grid-margin stretch-card\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">Category offer</h4>\n                        <form onSubmit={submitHandler} className=\"forms-sample\">\n                            <Form.Group>\n                                <label htmlFor=\"exampleInputPassword4\">Category</label>\n                                <select onChange={textChange} className=\"form-control\" id=\"maincategory\">\n                                    <option>Select</option>\n                                    {categoryDetails.map((item, key) => {\n                                        return (\n                                            <option>{item.Categoryname}</option>\n                                        )\n                                    })}\n                                </select>\n                            </Form.Group>\n                            <Form.Group className=\"row\">\n                                <label htmlFor=\"exampleInputEmail2\" className=\"col-sm-3 col-form-label\">Discount(In %)</label>\n                                <div className=\"col-sm-9\">\n                                    <Form.Control onChange={textChange} type=\"number\" className=\"form-control\" id=\"discount\" placeholder=\"Type here\" />\n                                </div>\n                            </Form.Group>\n\n                            <Form.Group className=\"row\">\n                                <label htmlFor=\"exampleInputPassword2\" className=\"col-sm-3 col-form-label\">Max Discount Amount</label>\n                                <div className=\"col-sm-9\">\n                                    <Form.Control onChange={textChange} type=\"number\" className=\"form-control\" id=\"maxdiscountamount\" placeholder=\"Type here\" />\n                                </div>\n                            </Form.Group>\n                            <Form.Group className=\"row\">\n                                <label htmlFor=\"exampleInputConfirmPassword2\" className=\"col-sm-3 col-form-label\">Coupon Expire Date</label>\n                                <div className=\"col-sm-9\">\n                                    <Form.Control onChange={textChange} type=\"Date\" className=\"form-control\" id=\"Expiredate\" placeholder=\"Type here\" />\n                                </div>\n                            </Form.Group>\n                            <div className=\"pt-4\">\n                                <button type=\"submit\" className=\"btn btn-primary mr-2\">Create Offer</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-md-6 grid-margin stretch-card\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">Offers</h4>\n                        <div className=\"table-responsive\">\n                            <table className=\"table table-hover\">\n                                <thead>\n                                    <tr>\n                                        <th>Category</th>\n                                        <th>Discount(In%)</th>\n                                        <th>Min_discount</th>\n                                        <th>Expire Date</th>\n                                        <th>Status</th>\n                                        <th>Delete</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n\n                                    {offers.map((item, k) => {\n                                        return (\n                                            <tr>\n                                                <td>{item.maincategory}</td>\n                                                <td>{item.offerdiscount}</td>\n                                                <td>{item.offer}</td>\n                                                <td>{item.offerexpiredate}</td>\n                                                <td><label className=\"badge badge-danger\">{item.status}</label></td>\n                                                <td><button onClick={() => { deleteOffer(item._id, item.maincategory) }} type=\"button\" className=\"btn btn-outline-danger btn-fw\">Delete</button></td>\n                                            </tr>\n                                        )\n                                    })}\n\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Offers\n"],"sourceRoot":""}