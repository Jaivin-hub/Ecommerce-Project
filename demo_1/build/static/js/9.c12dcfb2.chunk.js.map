{"version":3,"sources":["app/FileUpload.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","app/form-elements/BasicElements.js"],"names":["fileUploadAndResize","res","console","log","Promise","resolve","reject","allUploadedFiles","instance","post","image","then","response","data","url","catch","err","_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","BasicElements","useState","categorydata","setCategoryData","value","setValues","categoryDetails","setCategoryDetails","useEffect","getCategories","get","srcImg","setSrcImg","result","setResult","setImage","aspect","crop","setCrop","showImageHandler","setShowImageHandler","mainImage","setMainImage","cropImage","e","URL","createObjectURL","target","files","getCroppedImg","a","canvas","document","createElement","scaleX","naturalWidth","width","scaleY","naturalHeight","height","getContext","drawImage","x","y","base64Image","toDataURL","urlArray","prev","submitHandler","preventDefault","image1","image2","image3","image4","productdetails","textChange","newValues","id","className","aria-label","href","onClick","event","aria-current","onSubmit","autocomplete","Form","Group","htmlFor","Control","type","onChange","placeholder","Subcategory","map","item","key","Categoryname","Modal","size","aria-labelledby","centered","show","Body","cropBoxResizable","cropBoxData","style","maxWidth","src","onImageLoaded","Button","alt","data-text","name","rows"],"mappings":"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","file":"static/js/9.c12dcfb2.chunk.js","sourcesContent":["import React from \"react\";\nimport Resizer from \"react-image-file-resizer\";\nimport instance from \"./axios-orders\";\nexport const fileUploadAndResize = (res) => {\n  console.log('fileill')\n  return new Promise((resolve, reject) => {\n    let allUploadedFiles = ''\n\n    if (res) {\n      instance\n        .post(\n          `/uploads`,\n          { image: res },\n        )\n        .then((response) => {   \n          console.log('res aanu')\n          allUploadedFiles = response.data.url;\n          resolve(allUploadedFiles);\n        })\n        .catch((err) => {\n          console.log(\"CLOUDINARY UPLOAD ERR\", err);\n          reject('dfsdfd')\n        });\n    } // send back to server to upload cloudinary\n  })\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, { useState, useEffect } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './style.css'\nimport instance from '../axios-orders'\nimport { fileUploadAndResize } from '../FileUpload'\nimport { Modal, Button ,Form} from 'react-bootstrap'\n\n\nexport function BasicElements() {\n\n  const [categorydata, setCategoryData] = useState([])\n  const [selectedImage, setSelectedimage] = useState([])\n  const [value, setValues] = useState()\n  const [image1, setImage1] = useState('')\n  const [image2, setImage2] = useState('')\n  const [image3, setImage3] = useState('')\n  const [image4, setImage4] = useState('')\n  const [subcategory, setSubCategory] = useState('')\n  const [categoryDetails, setCategoryDetails] = useState([])\n\n\n\n\n\n  useEffect(() => {\n    getCategories()\n  }, [])\n\n  const getCategories = () => {\n    instance.get('/findCategories').then((response) => {\n      setCategoryDetails(response.data)\n    })\n  }\n\n  const onHide = () => {\n    setShowImageHandler(false)\n\n  }\n\n\n\n  // const fetchImage = () => {\n  //   console.log('ggggggggg')\n  //   axios.post('http://localhost:5000/users/fetchUserImage', { 'email': email }).then((res) => {\n  //     setUserImage(res.data.image)\n  //     setSpinner(false)\n  //   })\n  // }\n\n\n  // firstImg crop..\n  const [srcImg, setSrcImg] = useState(null);\n  const [result, setResult] = useState(null);\n  const [image, setImage] = useState(null);\n  const [crop, setCrop] = useState({ aspect: 1 / 1 });\n  const [showImageHandler, setShowImageHandler] = useState(false)\n  const [mainImage, setMainImage] = useState([]);\n  console.log('444', mainImage)\n  const cropImage = (e) => {\n    console.log('hhdjhskjdskjsdkj')\n    setSrcImg(URL.createObjectURL(e.target.files[0]));\n    setShowImageHandler(true)\n  }\n\n  const getCroppedImg = async () => {\n    console.log('crop function')\n    try {\n      const canvas = document.createElement(\"canvas\");\n      const scaleX = image.naturalWidth / image.width;\n      const scaleY = image.naturalHeight / image.height;\n      canvas.width = crop.width;\n      canvas.height = crop.height;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(\n        image,\n        crop.x * scaleX,\n        crop.y * scaleY,\n        crop.width * scaleX,\n        crop.height * scaleY,\n        0,\n        0,\n        crop.width,\n        crop.height\n      );\n      const base64Image = canvas.toDataURL(\"image/jpeg\", 1);\n      setResult(base64Image);\n      setShowImageHandler(false)\n      const urlArray = await fileUploadAndResize(base64Image)\n      setMainImage(prev => [...prev, urlArray])\n      console.log('data came here')\n    } catch (e) {\n      console.log(\"crop the image\");\n    }\n  };\n  // end\n\n\n\n  const submitHandler = async (e) => {\n    e.preventDefault()\n    const [image1, image2, image3, image4] = mainImage\n    const productdetails = { image1, image2, image3, image4, value }\n    console.log('here is the all data', productdetails)\n    instance.post('/addproducts', productdetails).then(() => {\n    }).catch((err) => {\n      console.log(err)\n    })\n  }\n\n  const renderPhotos = (source) => {\n    return source.map((photo) => {\n      return <img className=\"Alignimg\" src={photo} key={photo} alt=\"\" />\n    })\n  }\n\n  const textChange = (e) => {\n    const newValues = { ...value }\n    newValues[e.target.id] = e.target.value\n    setValues(newValues)\n  }\n\n\n\n  const categoryHandler = (e) => {\n    const data = e.target.value\n    const newValues = { ...value }\n    newValues[e.target.id] = e.target.value\n    setValues(newValues)\n    instance.get(`/getsubcategorydetails/${data}`).then((res) => {\n      console.log('data fetched to frontend')\n      setCategoryData(res.data.Subcategory)\n    })\n  }\n\n  const subCategoryHandler = (e) => {\n    const newValues = { ...value }\n    newValues[e.target.id] = e.target.value\n    setValues(newValues)\n  }\n\n\n\n\n\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\"> Add Products </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>New Products</a></li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">Add products</li>\n          </ol>\n        </nav>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12 grid-margin stretch-card\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-md-2\">\n                  <h4 className=\"card-title\">Product details</h4>\n                </div>\n                <div className=\"col-md-10\">\n                  <div className=\"row results ps-4\">\n                  </div>\n                </div>\n              </div>\n              <form onSubmit={submitHandler} autocomplete='off' className=\"forms-sample pt-4\">\n                <Form.Group>\n                  <label htmlFor=\"exampleInputName1\">Product Name</label>\n                  <Form.Control type=\"text\" onChange={textChange} className=\"form-control\" id=\"name\" placeholder=\"Name\" />\n                </Form.Group>\n                <Form.Group>\n                  <label htmlFor=\"exampleInputEmail3\">Quantity</label>\n                  <Form.Control type=\"text\" onChange={textChange} className=\"form-control\" id=\"quantity\" placeholder=\"quantity\" />\n                </Form.Group>\n                <Form.Group>\n                  <label htmlFor=\"exampleInputEmail3\">Size</label>\n                  <Form.Control type=\"text\" onChange={textChange} className=\"form-control\" id=\"size\" placeholder=\"size\" />\n                </Form.Group>\n                <Form.Group>\n                  <label htmlFor=\"exampleInputPassword4\">Category</label>\n                  <select className=\"form-control\" onChange={categoryHandler} id=\"maincategory\">\n                    <option>Select</option>\n                    {categoryDetails.map((item, key) => {\n                      return (\n                        <option>{item.Categoryname}</option>\n                      )\n                    })}\n                  </select>\n                </Form.Group>\n                <Form.Group>\n                  <label htmlFor=\"exampleInputPassword4\">SubCategory</label>\n                  <select className=\"form-control\" onChange={subCategoryHandler} id=\"subcategory\">\n                    <option>Select</option>\n                    {categorydata.map((item, key) => {\n                      return (\n                        <option>{item}</option>\n                      )\n                    })}\n                  </select>\n                </Form.Group>\n                <Form.Group>\n                  <label htmlFor=\"exampleSelectGender\">Stockdetails</label>\n                  <select className=\"form-control\" onChange={textChange} id=\"stockdetails\">\n                    <option>In stock</option>\n                    <option>Out of stock</option>\n                  </select>\n                </Form.Group>\n                <div className=\"row\">\n                  <div className=\"form col-md-3\">\n\n                    <Modal size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered show={showImageHandler}>\n                      <Modal.Body>\n                        <div>\n                          {srcImg && (\n                            <div>\n                              <ReactCrop cropBoxResizable={false} cropBoxData={{ width: 100, height: 50 }} style={{ maxWidth: \"50%\" }} src={srcImg} onImageLoaded={setImage} crop={crop} onChange={setCrop} />\n                              <Button onClick={getCroppedImg}>crop</Button>\n                            </div>\n                          )}\n                          {result && (\n                            <div>\n                              <img src={result} alt=\"cropped image\" />\n                            </div>\n                          )}\n                        </div>\n                        <Button onClick={onHide}>Close</Button>\n                      </Modal.Body>\n                    </Modal>\n\n                    <form >\n                      <div className=\"row\">\n                        <div className=\"col-md-3 ms-5\">\n                          <img src={mainImage[0]} alt=\"\" />\n                        </div>\n                      </div>\n                      <div className=\"file-upload-wrapper\" data-text=\"Select your file!\">\n                        <input type=\"file\" onChange={cropImage} name=\"Img1\" className=\"file-upload-field\" id=\"file-upload-field\" />\n                      </div>\n                    </form>\n                  </div>\n                  <div className=\"form col-md-3\">\n                    <form >\n                      <div className=\"row\">\n                        <div className=\"col-md-3\">\n                          <img src={mainImage[1]} alt=\"\" />\n                        </div>\n                      </div>\n                      <div className=\"file-upload-wrapper\" data-text=\"Select your file!\">\n                        <input type=\"file\" onChange={cropImage} name=\"Img2\" className=\"file-upload-field\" id=\"file-upload-field\" />\n                      </div>\n                    </form>\n                  </div>\n                  <div className=\"form col-md-3\">\n                    <form >\n                      <div className=\"row\">\n                        <div className=\"col-md-3\">\n                          <img src={mainImage[2]} alt=\"\" />\n                        </div>\n                      </div>\n                      <div className=\"file-upload-wrapper\" data-text=\"Select your file!\">\n                        <input type=\"file\" onChange={cropImage} name=\"Img3\" className=\"file-upload-field\" id=\"file-upload-field\" />\n                      </div>\n                    </form>\n                  </div>\n                  <div className=\"form col-md-3\">\n                    <form >\n                      <div className=\"row\">\n                        <div className=\"col-md-3\">\n                          <img src={mainImage[3]} alt=\"\" />\n                        </div>\n                      </div>\n                      <div className=\"file-upload-wrapper\" data-text=\"Select your file!\">\n                        <input type=\"file\" onChange={cropImage} name=\"Img4\" className=\"file-upload-field\" id=\"file-upload-field\" />\n                      </div>\n                    </form>\n                  </div>\n                </div>\n                <Form.Group>\n                  <label htmlFor=\"exampleInputCity1\">Price</label>\n                  <Form.Control type=\"text\" onChange={textChange} className=\"form-control\" id=\"price\" placeholder=\"price\" />\n                </Form.Group>\n                <Form.Group>\n                  <label htmlFor=\"exampleTextarea1\">Description</label>\n                  <textarea className=\"form-control\" onChange={textChange} id=\"description\" rows=\"4\"></textarea>\n                </Form.Group>\n                <button type=\"submit\" className=\"btn btn-primary mr-2\">Submit</button>\n                <button className=\"btn btn-dark\">Cancel</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n}\n\nexport default BasicElements\n"],"sourceRoot":""}