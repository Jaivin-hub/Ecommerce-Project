{"version":3,"sources":["app/form-elements/Category.js"],"names":["BasicElements","useState","values","setValues","categories","setCategories","added","setAdded","del","setDel","useEffect","getCategory","valueAdded","e","newData","target","id","value","instance","get","then","res","data","catch","err","console","log","showInputs","setShowInputs","className","aria-label","href","onClick","event","preventDefault","aria-current","onSubmit","post","autoComplete","Group","htmlFor","Control","type","onChange","placeholder","map","itm","k","Categoryname","_id"],"mappings":"6eAQO,SAASA,IAAiB,IAAD,EAEAC,qBAFA,mBAErBC,EAFqB,KAEbC,EAFa,OAGQF,mBAAS,IAHjB,mBAGrBG,EAHqB,KAGTC,EAHS,OAIFJ,oBAAS,GAJP,mBAIrBK,EAJqB,KAIdC,EAJc,OAKNN,oBAAS,GALH,mBAKrBO,EALqB,KAKhBC,EALgB,KAO5BC,qBAAU,WACNC,MACD,CAACL,EAAOE,IAMX,IAAMI,EAAa,SAACC,GAChB,IAAMC,E,yVAAO,IAAQZ,GACrBY,EAAQD,EAAEE,OAAOC,IAAMH,EAAEE,OAAOE,MAChCd,EAAUW,IAGRH,EAAc,WAChBO,IAASC,IAAI,mBAAmBC,MAAK,SAACC,GAClChB,EAAcgB,EAAIC,SACnBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAzBQ,EAkDOvB,qBAlDP,mBAkDrB0B,EAlDqB,KAkDVC,EAlDU,KAsD5B,OAFAH,QAAQC,IAAItB,GAGR,6BACI,yBAAKyB,UAAU,eACX,wBAAIA,UAAU,cAAd,iBACA,yBAAKC,aAAW,cACZ,wBAAID,UAAU,cACV,wBAAIA,UAAU,mBAAkB,uBAAGE,KAAK,KAAKC,QAAS,SAAAC,GAAK,OAAIA,EAAMC,mBAArC,iBAChC,wBAAIL,UAAU,yBAAyBM,eAAa,QAApD,mBAIZ,yBAAKN,UAAU,YACX,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,gBACA,uBAAGA,UAAU,oBAAb,+BACA,0BAAMO,SA1CT,SAACvB,GAClBA,EAAEqB,iBACF3B,GAAUD,GACVY,IAASmB,KAAK,eAAgBnC,GAAQkB,MAAK,WACvCK,QAAQC,IAAI,cACbH,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAoCkCc,aAAa,OACvC,kBAAC,IAAKC,MAAN,CAAYV,UAAU,OAClB,2BAAOW,QAAQ,wBAAwBX,UAAU,2BAAjD,gBACA,yBAAKA,UAAU,YACX,kBAAC,IAAKY,QAAN,CAAcC,KAAK,OAAOC,SAAU/B,EAAYiB,UAAU,eAAeb,GAAG,WAAW4B,YAAY,eAG3G,4BAAQZ,QAAS,WAAKJ,GAAc,IAAQC,UAAU,wBAAtD,eACCF,EACG,kBAAC,IAAKY,MAAN,CAAYV,UAAU,YAClB,2BAAOW,QAAQ,wBAAwBX,UAAU,2BAAjD,wBACA,yBAAKA,UAAU,YACX,kBAAC,IAAKY,QAAN,CAAcC,KAAK,OAAOC,SAAU/B,EAAYiB,UAAU,eAAeb,GAAG,WAAW4B,YAAY,wBAG7G,KACF,4BAAQF,KAAK,SAASb,UAAU,wBAAhC,UACA,4BAAQG,QAAS,WAAKJ,GAAc,IAASC,UAAU,gBAAvD,eASpB,yBAAKA,UAAU,QACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,cACA,yBAAKA,UAAU,oBACX,2BAAOA,UAAU,SACb,+BACI,4BACI,2CACA,6BACA,6BACA,6BACA,6BACA,6BACA,mDAGR,+BACKzB,EAAWyC,KAAI,SAACC,EAAKC,GAClB,OACI,4BAEI,4BACKD,EAAIE,cAET,kCACA,kCACA,iCACA,kCACA,kCACA,4BACI,4BAAQhB,QAAS,WA1F/C,IAAChB,IA0FoE8B,EAAIG,IAzF3FxC,GAAQD,GACRiB,QAAQC,IAAI,mBACZR,IAASmB,KAAT,0BAAiCrB,IAAMI,MAAK,WACxCK,QAAQC,IAAI,cAEbH,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAmFmFK,UAAU,iCAA7D,uBAiBzC7B","file":"static/js/12.e9afab2f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport './style.css'\nimport instance from '../axios-orders';\n\n\nexport function BasicElements() {\n\n    const [values, setValues] = useState()\n    const [categories, setCategories] = useState([])\n    const [added, setAdded] = useState(true)\n    const [del, setDel] = useState(true)\n\n    useEffect(() => {\n        getCategory()\n    }, [added, del])\n\n\n\n\n\n    const valueAdded = (e) => {\n        const newData = { ...values }\n        newData[e.target.id] = e.target.value\n        setValues(newData)\n    }\n\n    const getCategory = () => {\n        instance.get('/getallcategory').then((res) => {\n            setCategories(res.data)\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setAdded(!added)\n        instance.post('/addcatagory', values).then(() => {\n            console.log('success')\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n    const deleteHandler = (id) => {\n        setDel(!del)\n        console.log('in the function')\n        instance.post(`/deletecatagory/${id}`).then(() => {\n            console.log('success')\n\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n    const [showInputs,setShowInputs] = useState()\n\n    console.log(categories);\n\n    return (\n        <div>\n            <div className=\"page-header\">\n                <h3 className=\"page-title\"> Add Category</h3>\n                <nav aria-label=\"breadcrumb\">\n                    <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>New Products</a></li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Add products</li>\n                    </ol>\n                </nav>\n            </div>\n            <div className=\"row mt-5\">\n                <div className=\"col-md-12 grid-margin stretch-card\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h4 className=\"card-title\">Add Category</h4>\n                            <p className=\"card-description\">you can add new categories.</p>\n                            <form onSubmit={handleSubmit} autoComplete=\"off\">\n                                <Form.Group className=\"row\">\n                                    <label htmlFor=\"exampleInputUsername2\" className=\"col-sm-3 col-form-label\">New Category</label>\n                                    <div className=\"col-sm-9\">\n                                        <Form.Control type=\"text\" onChange={valueAdded} className=\"form-control\" id=\"Category\" placeholder=\"Category\" />\n                                    </div>\n                                </Form.Group>\n                                <button onClick={()=>{setShowInputs(true)}} className=\"btn btn-primary mr-2\">Add details</button>\n                                {showInputs ?\n                                    <Form.Group className=\"row pt-4\">\n                                        <label htmlFor=\"exampleInputUsername2\" className=\"col-sm-3 col-form-label\">Category description</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" onChange={valueAdded} className=\"form-control\" id=\"Category\" placeholder=\"Add extra details\" />\n                                        </div>\n                                    </Form.Group>\n                                : null}\n                                <button type=\"submit\" className=\"btn btn-primary mr-2\">Submit</button>\n                                <button onClick={()=>{setShowInputs(false)}} className=\"btn btn-dark\">Cancel</button>\n                           \n                            </form>\n                          \n                        </div>\n\n                    </div>\n                </div>\n            </div>\n            <div className=\"row \">\n                <div className=\"col-12 grid-margin\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h4 className=\"card-title\">Categories</h4>\n                            <div className=\"table-responsive\">\n                                <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th> Categories</th>\n                                            <th></th>\n                                            <th></th>\n                                            <th></th>\n                                            <th></th>\n                                            <th></th>\n                                            <th> Delete Category </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {categories.map((itm, k) => {\n                                            return (\n                                                <tr>\n\n                                                    <td>\n                                                        {itm.Categoryname}\n                                                    </td>\n                                                    <td>  </td>\n                                                    <td>  </td>\n                                                    <td> </td>\n                                                    <td>  </td>\n                                                    <td>  </td>\n                                                    <td>\n                                                        <button onClick={() => { deleteHandler(itm._id) }} className=\"btn btn-outline-danger btn-fw\">Delete</button>\n                                                    </td>\n                                                </tr>\n                                            )\n                                        })}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default BasicElements"],"sourceRoot":""}